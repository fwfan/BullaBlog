{"version":3,"sources":["pages/Home/Tag.js","pages/Home/CodeBlock.js","pages/Home/Article.js","pages/Home/ListItem.js","redux/actionTypes.js","pages/Home/Announcement.js","components/LoadingTips.js","pages/Home/Home.js","pages/About/About.js","pages/Life/Life.js","App.js","serviceWorker.js","redux/fetchReducer.js","redux/homePageNumReducer.js","redux/store.js","index.js"],"names":["Tag","props","state","tags","this","className","map","item","key","Component","CodeBlock","SyntaxHighlighter","registerLanguage","jsx","javascript","language","value","style","darcula","PureComponent","defaultProps","Article","article","source","renderers","code","ListItem","title","time","article_sub","BEFORE_FETCH","FETCH_FAIL","FETCH_SUCCESS","MODIFY_HOME_PAGENUM","Announcement","display","padding","textAlign","fontWeight","width","height","LoadingTips","loadState","getLoadingStringState","bind","index","Home","homeContent","pageNum","lastScrollTime","scrollHandler","fetchContent","conHeight","$","winHeight","window","scrollTop","curTime","Date","url","start","setState","fetch","method","then","res","json","data","result","length","num","console","log","removeEventListener","addEventListener","uid","upload_time","split","id","About","Life","App","href","to","exact","path","Boolean","location","hostname","match","initializeState","fetchReducer","action","type","initialHomePageNum","pageReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9fa39ece.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Tag extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { tags } = this.props;\r\n        return (\r\n            <div className=\"list-item-tag-container\"> 标签：\r\n                {tags.map(item => <span key={item} className=\"list-item-tag\">{item}</span>)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tag","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { PrismLight as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\n// 设置高亮样式\r\nimport { darcula } from \"react-syntax-highlighter/dist/esm/styles/prism\";\r\n// 设置高亮的语言\r\nimport { jsx, javascript} from \"react-syntax-highlighter/dist/esm/languages/prism\";\r\n\r\nclass CodeBlock extends PureComponent {\r\n    static propTypes = {\r\n        value: PropTypes.string.isRequired,\r\n        language: PropTypes.string\r\n    };\r\n\r\n    static defaultProps = {\r\n        language: null\r\n    };\r\n\r\n    componentDidMount() {\r\n        // 注册要高亮的语法，\r\n        // 注意：如果不设置打包后供第三方使用是不起作用的\r\n         SyntaxHighlighter.registerLanguage(\"jsx\", jsx);\r\n         SyntaxHighlighter.registerLanguage(\"javascript\", javascript);\r\n    }\r\n\r\n    render() {\r\n        const { language, value } = this.props;\r\n        return (\r\n            <figure className=\"highlight\">\r\n                <SyntaxHighlighter language={language} style={darcula}>\r\n                    {value}\r\n                </SyntaxHighlighter>\r\n            </figure>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CodeBlock;\r\n","import React, { Component } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport CodeBlock from './CodeBlock.js';\r\n\r\nclass Article extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { article} = this.props;\r\n\r\n        return(\r\n            <div>\r\n                <ReactMarkdown source={article} renderers={{\r\n                    code: CodeBlock\r\n                }}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Article;\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport Tag from './Tag.js'\r\nimport Article from './Article.js';\r\n\r\nclass ListItem extends Component {\r\n    constructor(props){\r\n        super (props);\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { title, time, tags, article_sub} = this.props;\r\n        return (\r\n            <div className=\"list-item\">\r\n                <h3>{title}</h3>\r\n                <Tag tags={tags}/>\r\n                <div className=\"list-item-time-container\">{time}</div>\r\n                <Article article={article_sub}/>\r\n                <hr />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListItem;","\r\nexport const BEFORE_FETCH = 'BEFORE_FETCH';\r\nexport const FETCH_FAIL = 'FETCH_FAIL';\r\nexport const FETCH_SUCCESS = 'FETCH_SUCCESS';\r\nexport const MODIFY_HOME_PAGENUM = 'MODIFY_HOME_PAGENUM';","import React, {Component}from 'react';\r\n\r\nclass Announcement extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let titleStyle = {\r\n            textAlign :'center',\r\n            fontWeight :'bold',\r\n            width : '100%',\r\n            height :'30px'\r\n        }\r\n\r\n        let contentStyle = {\r\n            width :'100%',\r\n            height : '80px'\r\n        }\r\n\r\n        let containerStyle = {\r\n            display : 'none',\r\n            padding : '20px 20px 20px 0px'\r\n        } \r\n\r\n        return (\r\n            <div style={containerStyle}>\r\n                <div style={titleStyle}>公告</div>\r\n                <div>地震预警四川省重点实验室主任、成都高新减灾研究所所长王暾博士表示，“村村响”接入地震预警功能，是在各地各级政府的授权下、相关单位紧密合作的结果，是打通地震预警“最后一公里”的重要渠道。</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Announcement;","import React, {Component} from 'react';\r\n\r\nclass LoadingTips extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            loadState : 0 //0:begin, 1:loading, 2:down, 3:no data\r\n        }\r\n\r\n        this.getLoadingStringState = this.getLoadingStringState.bind(this);\r\n    }\r\n\r\n    getLoadingStringState(index = 0){\r\n        let loadingStringState = '加载中，请稍后... ...';\r\n\r\n        if (index === 1) {\r\n            loadingStringState = '加载中，请稍后......';\r\n        } else if (index === 2) {\r\n            loadingStringState = '加载完毕!'\r\n        } else {\r\n            loadingStringState = '别划拉了，我也是有底线的';\r\n        }\r\n\r\n        return loadingStringState;\r\n    }\r\n\r\n    render(){\r\n        let {loadState} = this.props;\r\n        let style = {\r\n            height: '50px',\r\n            textAlign: 'center',\r\n        }\r\n\r\n        return (\r\n            <div style={style}>{this.getLoadingStringState(loadState)}</div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default LoadingTips;","import React, { Component } from 'react';\r\nimport './Home.css';\r\nimport ListItem from './ListItem.js';\r\nimport $ from 'jquery';\r\nimport { connect } from 'react-redux';\r\nimport { beforeFetch, failFetch, successFetch, modifyPageNum} from '../../redux/action.js';\r\nimport PropTypes from 'prop-types';\r\nimport Announcement from './Announcement.js';\r\nimport LoadingTips from '../../components/LoadingTips.js';\r\n\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            homeContent : [],\r\n            loadState : 0,\r\n            pageNum : 0\r\n        };\r\n        this.lastScrollTime = 0;\r\n        this.scrollHandler = this.scrollHandler.bind(this);\r\n        this.fetchContent = this.fetchContent.bind(this);\r\n    }\r\n\r\n    scrollHandler() {\r\n        let conHeight = $('.content-container').height();\r\n        let winHeight = $(window).height();\r\n        let scrollTop = $(window).scrollTop();\r\n        let curTime = new Date();\r\n        if (150 + scrollTop >= conHeight - winHeight){\r\n            if(curTime - this.lastScrollTime < 500) return; \r\n            this.lastScrollTime = curTime;\r\n            this.fetchContent();\r\n        }\r\n    }\r\n\r\n\r\n    fetchContent() {\r\n        let url = `/public/Index/Index/subIndex?limit=8`;\r\n        let firstPageNum = 8;\r\n\r\n        if (this.state.pageNum === 0) {\r\n            url = `/public/Index/Index/subIndex?start=0&limit=${firstPageNum}`\r\n        } else {\r\n            let start = (this.state.pageNum - 1) * 5 + firstPageNum;\r\n            url = `/public/Index/Index/subIndex?start=${start}&limit=5`\r\n        }\r\n        this.setState({loadState : 1});\r\n        fetch(url, {\r\n            method: 'GET'\r\n        }).then(res => res.json()).then(\r\n            (data) => {\r\n                if(data.result.length === 0){\r\n                    this.setState({\r\n                        loadState: 3\r\n                    });\r\n                }else{\r\n                    let num = this.state.pageNum + 1;\r\n                    this.setState({\r\n                        loadState: 2,\r\n                        pageNum: num,\r\n                        homeContent: [...this.state.homeContent, ...data.result]\r\n                    });\r\n                }\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        console.log('will Unmount' + this.state.pageNum);\r\n        window.removeEventListener('scroll', this.scrollHandler);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        console.log('Did Unmount' + this.state.pageNum);\r\n        window.addEventListener('scroll', this.scrollHandler);\r\n        this.fetchContent();\r\n    }\r\n\r\n    render() {\r\n       \r\n        return (\r\n            <div>\r\n                <div className=\"content-container-left\" >\r\n\r\n                </div>\r\n                <div className=\"content-container\" >\r\n                    <div className=\"content-container-header\"></div>\r\n                    {this.state.homeContent.map(item => <ListItem key={item.uid} title={item.title} time={item.upload_time} tags={item.tags ? item.tags.split(\".\") : []} article_sub={item.article_sub} />)}\r\n                    <LoadingTips loadState={this.state.loadState}></LoadingTips>\r\n                </div>\r\n                <div className=\"content-container-right\" >\r\n                    <Announcement />\r\n                    <div className=\"content-container-right-ajax-test\" id=\"content-container-right-ajax-test\"></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// 定义方法mapStateToProps，参数为state，并且返回一个对象，对象内定义需要获取的store内的数据，\r\n// 由于是使用的countReducer中的数据，所以需要使用state.countReducer.属性名 \r\n// function mapStateToProps(state) {\r\n//     return {\r\n//         pageNum: state.pageReducer.pageNum,\r\n//         homeContent : state.fetchReducer.homeContent\r\n//     }\r\n// }\r\n\r\n// function mapDispatchToProps(dispatch, props) {\r\n//     return {\r\n//         modifyPageNum: (num) => dispatch(modifyPageNum(num)),\r\n//         fechContent: (pageNum)=>{\r\n//             // console.log(props);\r\n//             // if(props.homeContent){\r\n//             //     return ;\r\n//             // }\r\n//             let url = `/public/Index/Index/subIndex?limit=8`;\r\n//             let firstPageNum = 8;\r\n//             console.log(props);\r\n//             if (pageNum === 0) {\r\n//                 url = `/public/Index/Index/subIndex?start=0&limit=${firstPageNum}`\r\n//             } else {\r\n//                 let start = (pageNum - 1) * 5 + firstPageNum;\r\n//                 url = `/public/Index/Index/subIndex?start=${start}&limit=5`\r\n//             }\r\n//             //dispatch(beforeFetch());\r\n//             fetch(url, {\r\n//                 method: 'GET'\r\n//             }).then(res => res.json()).then(\r\n//                 (data) => {\r\n//                     pageNum = pageNum + 1;\r\n//                     dispatch(successFetch(data.result));\r\n//                 }\r\n//             )\r\n//         }\r\n//     }\r\n// }\r\n// Home.propTypes = {\r\n//     pageNum: PropTypes.number.isRequired,\r\n//     homeContent: PropTypes.array.isRequired,\r\n//     fechContent: PropTypes.func.isRequired,\r\n//     modifyPageNum: PropTypes.func.isRequired\r\n// }\r\n// connect的第一个参数为数据，即mapStateToProps方法\r\n// 接着在第二个括号内传入当前需要被改造的组件 \r\n//export default connect(mapStateToProps, mapDispatchToProps)(Home);\r\nexport default Home;\r\n","import React, {Component} from 'react';\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h2>About</h2>\r\n                <div></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\n\r\nclass Life extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Life</h2>\r\n                <div></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Life;","import React, { Component } from 'react';\nimport {HashRouter as Router, Route, Link, Switch} from \"react-router-dom\";\nimport Home from \"./pages/Home/Home.js\";\nimport About from \"./pages/About/About.js\";\nimport Life from \"./pages/Life/Life.js\";\n\nclass App extends Component {\n\n  render(){\n    return (\n      <div>\n        <Router>\n          <div className=\"nav-container\">\n            <div className=\"nav\">\n              <ul>\n                <li href=\"/\" className=\"tab-head-home tab-head\" >\n                  <Link to=\"/\">首页</Link>\n                </li>\n                <li href=\"/\" className=\"tab-head-home tab-head\" >\n                  <Link to=\"/study\">学习</Link>\n                </li>\n                <li href=\"/\" className=\"tab-head-about tab-head\" >\n                  <Link to=\"/life\">杂碎</Link>\n                </li>\n                <li href=\"/\" className=\"tab-head-about tab-head\" >\n                  <Link to=\"/about\">Demo</Link>\n                </li>\n              </ul>\n            </div>\n          </div>\n\n          <div className=\"content-container-top\" ></div>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/study\">\n              <About />\n            </Route>\n            <Route path=\"/life\">\n              <Life />\n            </Route>\n            <Route path=\"/about\">\n              <About />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    );\n  } \n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {FETCH_FAIL, FETCH_SUCCESS, BEFORE_FETCH} from './actionTypes.js';\r\n\r\n// 定义初始化的数据，根据实际数据即可\r\nconst initializeState = {\r\n    homeContent: []\r\n}\r\n\r\n// 定义reducer，第一个参数为state，赋予默认值为上边定义的initializeState，\r\n// 第二个参数为action，并return一个state  \r\n// 并且抛出这个countReducer\r\nfunction fetchReducer(state = initializeState, action) {\r\n    switch (action.type) {\r\n        case FETCH_FAIL:\r\n            return { homeContent: []}\r\n        case FETCH_SUCCESS:\r\n            return { homeContent: action.homeContent}\r\n        case BEFORE_FETCH:\r\n            return { homeContent : []}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default fetchReducer;","import { MODIFY_HOME_PAGENUM } from './actionTypes.js';\r\n\r\nconst initialHomePageNum = {\r\n    pageNum : 0\r\n}\r\n\r\n\r\n// 定义reducer，第一个参数为state，赋予默认值为上边定义的initializeState，\r\n// 第二个参数为action，并return一个state  \r\n// 并且抛出这个countReducer\r\nfunction pageReducer(state = initialHomePageNum, action) {\r\n    switch (action.type) {\r\n        case MODIFY_HOME_PAGENUM:\r\n            return { pageNum: action.pageNum }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default pageReducer;\r\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport fetchReducer from './fetchReducer.js';\r\nimport pageReducer from './homePageNumReducer.js';\r\n// createStore方法是用来创建store的，combineReducers方法是用来合并多个reducer的\r\n\r\n// 创建根reducer，利用combineReducers合并多个reducer，此处还未定义reducer，所以暂空\r\nconst rootReducer = combineReducers({\r\n    fetchReducer, pageReducer\r\n});\r\n\r\n // 创建store，第一个参数是根reducer，第二个参数可以是初始化的state\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux/store'\n\n\nReactDOM.render(\n    <Provider store = {store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n    \n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}